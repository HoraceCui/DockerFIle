# This is a basic workflow to help you get started with Actions

name: build

on:
  push:
    paths:
      - '**/Dockerfile'
      - '**/*.py'
      - '**/*.sh'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Aliyun ACR
        run: |
          echo "${{ secrets.ALIYUN_PASSWORD }}" | docker login registry.cn-shanghai.aliyuncs.com \
            --username ${{ secrets.ALIYUN_USERNAME }} --password-stdin
            
      - name: Get current date
        id: date
        run: echo "tag=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

      - name: Detect changed services
        id: changes
        run: |
          git fetch origin ${{ github.event.before }}
          CHANGED_DIRS=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | \
            awk -F/ '{print $1}' | sort -u)

          SERVICES=""
          for dir in $CHANGED_DIRS; do
            if [ -f "$dir/Dockerfile" ]; then
              SERVICES="$SERVICES $dir"
            fi
          done

          echo "services=$SERVICES" >> $GITHUB_OUTPUT
          
      - name: Build and push Docker images to ACR
        if: steps.changes.outputs.services != ''
        run: |
          for service in ${{ steps.changes.outputs.services }}; do
            DATE_TAG=${{ steps.date.outputs.tag }}
            IMAGE_NAME=registry.cn-shanghai.aliyuncs.com/${{ secrets.ALIYUN_NAMESPACE }}/$service
            echo "Building and pushing $IMAGE_NAME:$DATE_TAG and $IMAGE_NAME:latest..."

            docker build -t $IMAGE_NAME:$DATE_TAG -t $IMAGE_NAME:latest $service
            docker push $IMAGE_NAME:$DATE_TAG
            docker push $IMAGE_NAME:latest
          done

              
